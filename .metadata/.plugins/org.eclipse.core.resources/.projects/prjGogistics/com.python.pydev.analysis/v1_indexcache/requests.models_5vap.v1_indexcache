need
using
decode_content
getLogger
HEAD
Raises
over
time
chunk_size
created
event
iter_content
fh
AttributeError
advanced
ft
detected
fo
content_type
fn
objects
fp
urlencode
host
once
basestring
Detect
number
transmission
header
extract
GET
isinstance
Used
explicit
__attrs__
lines
each
existed
tuples
Fallback
go
Headers
knowledge
A
url_auth
before
exclusive
indicate
netloc
Usage
IncompleteRead
could
Perhaps
domain
do
tell
MUST
cookies
datetime
Content
e
prepare_headers
a
Response
requote_uri
l
join
k
h
elapsed
history
register
v
t
s
r
guess
p
library
rel
InvalidURL
req
returned
oddball
x
body
Recompute
prepare_cookies
normal
by
CookieJar
_encode_params
has
close
insensitive
prepare_method
consumed
invalid
basic
Build
Should
any
BytesIO
__getstate__
key
be
retained
hook
append
gen
packages
get
releases
manually
hostname
label
detection
items
better
names
containing
example
urllib3
make
large
does
raw
val
update
simulate
Encoding
ContentDecodingError
aren
set
through
Returns
response
following
name
LookupError
redirect
fragment
all
status_code
MultiDict
requirement
encode_multipart_formdata
makes
at
Error
memory
ITER_CHUNK_SIZE
entire
advantage
which
take
an
arrival
mutable
lower
reason
Callable
UnicodeError
no
get_auth_from_url
urlunparse
chunked
of
Requests
errors
Files
given
pending
empty
on
ok
RequestEncodingMixin
fully
support
preparation
attr
RFC
responses
path_url
http
__bool__
Will
enc_params
will
auto
bodies
CONTENT_CHUNK_SIZE
small
auth
accessing
raised
descriptor
explicitly
most
occurred
ValueError
upload
normally
apparent
OK
Unsupported
ChunkedEncodingError
encoding
internal
similar
files
CaseInsensitiveDict
schemes
JSON
true
links
No
sending
hasattr
specified
item
DecodeError
callback
method
prepare_body
headers
apply
staticmethod
last
location
multipart
contains
since
type
filepost
request
when
primary
exact
value
underlying
Standard
iterator
Streamed
such
OAuth
Thanks
here
meant
timedelta
requires
idna
called
If
release
this
util
to_native_string
Optional
guess_filename
compat
is_py2
hooks
Type
cookie_header
add
network
was
super
StringIO
paths
mutually
appropriately
reconstruct
path
read
generator
between
application
it
extend
into
list
params
section
io
Authenticators
deregister_hook
make_multipart
Ian
IDNA
wrong
found
changes
Special
Cookie
don
passed
pop
new_fields
its
PreparedRequest
schema
Deregister
prepare_content_length
scheme
lovely
place
__setstate__
iter_slices
piece
copy
chunks
__repr__
UnicodeDecodeError
contents
getattr
charset
log
Server
When
prepare_url
structures
models
content
cookie
__init__
decode
_content
to_key_val_list
Encode
we
RuntimeError
fails
param
urlencoded
data
states
use
vs
run
Code
apparent_encoding
Cookies
The
decoding
We
Allows
best
Client
collections
blindly
Bare
UnsupportedOperation
http_error_msg
back
Note
supplied
utf
_cookies
Nottin
up
seek
replace
Decode
field
either
arguments
release_conn
string
part
reflect
coding
arbitrary
to
HTTP
URLs
super_len
handled
must
necessarily
amount
after
takes
Session
Allow
Add
Consume
parameters
Invalid
builtin_str
fields
loads
text
MissingSchema
url
size
stream_decode_response_unicode
that
str
previously
Read
case
doseq
urlsplit
oldest
result
HTTPBasicAuth
valid
generate
can
default_hooks
Update
fileobject
www
rf
Generated
re
kwargs
So
verb
json
sorted
__name__
unicode
responded
you
Status
RequestException
registered
authentication
prepare_hooks
determined
provided
usage
server
Integer
Py3
uploads
RequestField
handler
chunk
Multi
tuple
domains
everything
expect
bytestrings
Properly
Data
are
file
startswith
Default
httpbin
exhausted
form
cookiejar_from_dict
prepare
like
create
__dict__
non
__iter__
Use
port
stream
cookielib
bytes
remove
query
link
line
_content_consumed
Request
org
This
exceptions
length
parse_header_links
URL
Dictionary
end
want
dicts
module
HTTPError
avoids
already
len
dictionary
stored
should
process
Constructs
_encode_files
successfully
attach
fall
Length
register_hook
raise_for_status
NameError
based
reading
but
send
Try
decode_unicode
enable
used
been
RequestHooksMixin
requests
Final
internally
sent
chardet
get_cookie_header
splitlines
Case
UTF
power
returns
Accept
__nonzero__
sure
Auth
work
encode
connection
goes
letter
guessed
Iterates
logging
property
NotImplementedError
format
Only
Transfer
TypeError
parsed
representation
prepared
call
Any
dict
setattr
have
one
state
Order
attribute
iter_lines
pickled
object
encoded
Charade
prepare_auth
recent
soley
upper
pool
Support
parse_url
For
representations
Python
detect
Check
wasn
mistake
File
the
Carefully
Closes
misspelling
utils
guess_json_utf
filename
Don
Prepares
special
user
first
is_stream
