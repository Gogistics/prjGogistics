handle
matched
external
vm_config
etc
VM
creates
semantics
created
communicate
copy
host
defined
max_concurrent_requests
under
Serves
error_handler_file
base_url
log
http_proxy
__init__
wsgi_request_info
own
bin
DOCKER_D_REQUEST_TIMEOUT
vm
owns
unique
gethostname
A
before
use
running
docker_daemon_url
Apache
The
proxy
Create
HttpProxy
usr
url_map
VMRuntimeProxy
Client
RUNTIME
may
e
warmup
integer
a
Inc
max_background_threads
image_id
i
up
works
new
either
arguments
t
pattern
s
seconds
API_HOST
sequence
string
configuration
module_configuration
api_host
Unless
to
runtime_config_pb2
body
client
HTTP
distributed
Instances
apache
by
runtime_config
GAE_MODULE_VERSION
localhost
software
VERSION
permissions
hosts
instance
Version
be
application_root
agreed
AS
ModuleConfiguration
Runtime
WSGIRequestInfo
constants
properly
that
_container
minor_version
str
associated
containing
factory
module_name
rw
update
forwarding
result
_get_instance_logs
connect
Start
can
request_type
var
set
governing
www
strings
volumes
Returns
re
response
SUPPORTS_INTERACTIVE_REQUESTS
PORT
Manages
TODO
MODULE
Initializer
implied
An
Docker
KIND
GAE_MODULE_NAME
law
runtime_config_getter
app_engine
You
URLMap
HTTP_PORT
at
you
still
See
_runtime_config_getter
_instance_died_unexpectedly
py
vmruntime
inside
an
provided
daemon
Google
handler
newly
via
expect_ready_request
configured
tag
nocache
vmservice
of
file
on
only
instance_died_unexpectedly
information
request_data
ALWAYS
HasField
without
obtain
InstanceFactory
http
start
container
then
will
language
_ah
port
Config
google
ContainerOptions
express
org
quit
WITHOUT
Stop
version
apphosting
GAE_LONG_APP_ID
major_version
CONDITIONS
OF
Copyright
_REQUEST
GAE_MODULE_INSTANCE
application_external_name
URL
app
containers
module
dockerfile_dir
logs
_proxy
api_port
get_app_error_file
env
OR
process
_docker_client
VMRuntimeInstanceFactory
request_id
per
specified
License
MatchObject
Couldn
Timeout
Kills
docker_client
gethostbyname
compliance
type
ext
function
respresenting
python
LICENSE
requests
sent
tools
partition
FILE_CHANGE_INSTANCE_RESTART_POLICY
request
when
socket
start_response
returns
required
application_configuration
new_instance
instance_id
API_PORT
environ
here
Must
logging
IS
GAE_MINOR_VERSION
requires
devappserver2
WARRANTIES
image_opts
docker
environment
matching
representing
called
match
If
this
Instance
stubs
dict
specific
have
RuntimeProxy
_module_configuration
ImageOptions
limitations
writing
runtime
object
licenses
applicable
APP_ID
PEP
super
id
Handle
because
API
Args
effective_runtime
Licensed
accessible
won
threadsafe
Container
Check
application
it
error
ANY
appinfo
Yields
GAE_PARTITION
the
BASIS
instance_logs_getter
appengine
removes
special
timeout
