'''
Created on Jul 23, 2014

@author: Alan Tai
'''
import webapp2
from models.models_gcm import GCMClientRegID
import json
import httplib
import logging
from webapp2 import redirect
from handlers_gcm.handler_gcm import GCMMessage, GCMConnection

class GCMReceiveRegIDHandler(webapp2.RequestHandler):
    ''' handle received id '''
    def post(self):
        reg_id = self.request.get('registrationId')
        user_name = self.request.get('userName')
        
        new_reg_id = GCMClientRegID()
        new_reg_id.reg_id = reg_id
        new_reg_id.user_name = user_name
        new_reg_id.put()
        return
    
class GCMSendHandler(webapp2.RequestHandler):
    ''' setup GCM send method '''
    def post(self):
        reg_ids = GCMClientRegID.query()
        if reg_ids.count() > 0:
            gcm_message = GCMMessage()
            gcm_connection =GCMConnection()
        
#         API_KEY = 'AIzaSyA7tGq5_OGeRARVbrKhm9lZvUjhgd-ncU4'
#         headers = {'Content-Type': 'application/json' , 'Authorization':'key=' + API_KEY}
#         conn = httplib.HTTPSConnection('android.googleapis.com')
#         
#         #loop through registered id then send messages to registered devices
#         reg_ids = GCMClientRegID.query()
#         if reg_ids.count() > 0:
#             for reg_id in reg_ids:
#                 params = {}
#                 params['message'] = {'user_name': reg_id.user_name}
#                 params['registration_ids'] = [reg_id.reg_id]
#                 
#                 json_parame = json.dumps(params)
#                 conn.request('POST', '/gcm/send', json_parame, headers)
#             
#         conn.close()
#         redirect('/')
    
#dispatchers
app = webapp2.WSGIApplication([('/gcm_reg_id_handler', GCMReceiveRegIDHandler),('/gcm_send_message', GCMSendHandler)], debug =True)
        
#log 
logging.getLogger().setLevel(logging.DEBUG)
        